/**
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wgc.advancedFight.mods;

import java.util.Set;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import de.jan9103.wargearcore.SoundKategory;
import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.api.fight.FightMod;
import de.jan9103.wargearcore.chat.Msg;
import de.jan9103.wargearcore.fight.Fight;
import de.jan9103.wgc.advancedFight.P;

public class EnderGear extends FightMod{
	private final int speed;
	public EnderGear(Fight fyte,String[]a){super(fyte);if(a.length>3)speed=Integer.parseInt(a[3]);else speed=10;}
	@Override public String desc(){return"Ender Gear";}
	@Override public String cfg(){return"endergear";}
	@Override public void fightStart(){
		addShedule(Bukkit.getScheduler().scheduleSyncRepeatingTask(P.p,()->tick(),speed,speed));
	}
	public void tick(){
		if(P.r.nextInt(10)==0){
			Set<User>users=f.allAliveUsers();
			User u1=P.rdm(users),u2=P.rdm(users);
			Player p1=u1.getPlayer(),p2=u2.getPlayer();
			switch(P.r.nextInt(3)){
				case 1:{  // inv
					ItemStack[]armor=p1.getInventory().getArmorContents(),
							content=p1.getInventory().getContents();
					p1.getInventory().setArmorContents(p2.getInventory().getArmorContents());
					p1.getInventory().setContents(p2.getInventory().getContents());
					p2.getInventory().setArmorContents(armor);
					p2.getInventory().setContents(content);
					new Msg(u1,WGC._PREFIX_2_Fight).a("You swapped inventory with "+p2.getName()).a(p1);
					new Msg(u2,WGC._PREFIX_2_Fight).a("You swapped inventory with "+p1.getName()).a(p2);
					u1.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_HORSE_SADDLE,0);
					u2.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_HORSE_SADDLE,0);
					return;}
				case 2:{  // health
					double t=(int)p1.getHealth();
					p1.setHealth(p2.getHealth());
					p2.setHealth(t);
					new Msg(u1,WGC._PREFIX_2_Fight).a("You swapped health with "+p2.getName()).a(p1);
					new Msg(u2,WGC._PREFIX_2_Fight).a("You swapped health with "+p1.getName()).a(p2);
					u1.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_SPLASH_POTION_THROW,1);
					u2.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_SPLASH_POTION_THROW,1);
					return;}
				default:{ // position
					Location t=p1.getLocation();
					p1.teleport(p2);
					p2.teleport(t);
					new Msg(u1,WGC._PREFIX_2_Fight).a("You swapped positions with "+p2.getName()).a(p1);
					new Msg(u2,WGC._PREFIX_2_Fight).a("You swapped positions with "+p1.getName()).a(p2);
					u1.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_ENDERMAN_TELEPORT,0);
					u2.playSound(SoundKategory.FIGHT_EVENT,Sound.ENTITY_ENDERMAN_TELEPORT,0);
					return;}
			}
		}
	}
}