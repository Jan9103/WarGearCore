/**
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wgc.advancedFight.mods;

import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.entity.EntityType;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.api.fight.FightMod;
import de.jan9103.wargearcore.fight.Fight;
import de.jan9103.wargearcore.fight.modifier.FightModConstructorException;

public class RandomizerMod extends FightMod{
	private final int speed;
	private final Random r=new Random();
	public RandomizerMod(Fight fyte,int speed){super(fyte);this.speed=speed;}
	public RandomizerMod(Fight fyte,String[]a)throws FightModConstructorException{
		super(fyte);
		int s=1000;
		if(a.length>3)
			try{s=Integer.parseInt(a[3]);
			}catch(NumberFormatException e){throw new FightModConstructorException("Thats not a valid number..");}
		speed=s;
	}
	@Override public void fightStart(){
		addShedule(Bukkit.getScheduler().scheduleSyncRepeatingTask(WGC.wgc,()->{randomEvent();},speed,speed));
	}
	@Override public void fightEnd(){stopAllShedules();}
	@Override public void unload(){stopAllShedules();}
	private void randomEvent(){
		switch(r.nextInt(3)){
			case 1:{ // wither in middle of wg
				f.bc("Theres a wither in your middle!");
				int x=((f.area.redWg.high.x-f.area.redWg.low.x)>>1)+f.area.redWg.low.x,
					y=((f.area.redWg.high.y-f.area.redWg.low.y)>>1)+f.area.redWg.low.y;
				f.area.w.spawnEntity(new Location(f.area.w,(double)x,(double)y,(double)(((f.area.redWg.high.z-f.area.redWg.low.z)>>1)+f.area.redWg.low.z)),EntityType.WITHER);
				f.area.w.spawnEntity(new Location(f.area.w,(double)x,(double)y,(double)(((f.area.bluWg.high.z-f.area.bluWg.low.z)>>1)+f.area.bluWg.low.z)),EntityType.WITHER);
				return;}
			case 2:{
				f.bc("Reverse Gravity!");
				PotionEffect pi=new PotionEffect(PotionEffectType.LEVITATION,80,1,true,false,false);
				f.allAliveUsers((i)->i.getPlayer().addPotionEffect(pi));
				return;}
			default:{ // speed effect
				PotionEffect pi=new PotionEffect(PotionEffectType.SPEED,100,1,true,false,false);
				f.bc("Lets hurry for a bit.");
				f.allAliveUsers((i)->i.getPlayer().addPotionEffect(pi));
				return;}
			//TODO add more
		}
	}
	@Override public String desc(){return"Random Event every "+(speed/20)+"sec.";}
	@Override public String cfg(){return"randomizer "+speed;}
}
