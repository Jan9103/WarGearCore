/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.coordSys;

import java.io.Serializable;

import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.block.Block;

public class BigCoord implements Serializable {
	private static final long serialVersionUID=-7944392219187190182L;
	public final int x,y,z;
	public BigCoord(Location l){
		x=l.getBlockX();
		y=l.getBlockY();
		z=l.getBlockZ();
	}

	public BigCoord(Block b){
		x=b.getX();
		y=b.getY();
		z=b.getZ();
	}

	public BigCoord(int x,int y,int z){
		this.x=x;
		this.y=y;
		this.z=z;
	}

	public String save(){
		return new String(x+" "+y+" "+z);
	}

	public BigCoord(String s){
		final String[] sa=s.split(" ");

		x=Integer.parseInt(sa[0]);
		y=Integer.parseInt(sa[1]);
		z=Integer.parseInt(sa[2]);
	}

	public BigCoord min(BigCoord b){
		return new BigCoord(Integer.min(x,b.x),Integer.min(y,b.y),Integer.min(z,b.z));
	}

	public BigCoord max(BigCoord b){
		return new BigCoord(Integer.max(x,b.x),Integer.max(y,b.y),Integer.max(z,b.z));
	}

	public SmallCoord toSmallCood(){
		return new SmallCoord(x,z);
	}

	public BigCoord copy(){
		return new BigCoord(x,y,z);
	}

	public Location getLocation(World w){
		return new Location(w,x,y,z);
	}

	public BigCoord offset(BigCoord c){
		return new BigCoord(x-c.x,y-c.y,z-c.z);
	}

	public BigCoord offset(int xo,int yo,int zo){
		return new BigCoord(x-xo,y-yo,z-zo);
	}

	public BigCoord pOffset(int xo,int yo,int zo){
		return new BigCoord(x+xo,y+yo,z+zo);
	}

	public BigCoord pOffset(BigCoord c){
		return new BigCoord(x+c.x,y+c.y,z+c.z);
	}

	public BigArea toAr(int xs,int ys,int zs){
		return new BigArea(this,new BigCoord(x+xs,y+ys,z+zs));
	}

	public Block block(World w){
		return w.getBlockAt(x,y,z);
	}
}
