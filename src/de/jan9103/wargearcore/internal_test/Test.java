/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.internal_test;

import java.util.List;
import java.util.Random;

public abstract class Test extends Thread {
	public static int LINE_WIDTH=150;

	public int test_success=0,test_fail=0;
	public String o="\n";

	public String getMsg(){
		return o;//return this.getClass().getName()+": "+test_fail+"F :: "+test_success+"S";
	}

	public static String repeat(String in,int count){
		String o="";

		for(int i=count; i>=0; i--) o+=in;
		return o;
	}

	public String listToString(List<?>l){
		String o="";

		for(Object i:l) o+=/*"\u0007"*/ "\\"+i.toString();
		return o;
	}

	public String arrayToString(Object[] l){
		String o="";

		for(Object i:l) o+=/*"\u0007"*/ "\\"+i.toString();
		return o;
	}

	public String arrayToString(byte[] l){
		String o="";

		for(byte i:l) o+=/*"\u0007"*/ " "+i;
		return o;
	}

	public static String headerLine(String in,char trenner){
		String i=" "+in+" ";
		float  z=(LINE_WIDTH-i.length())/2f;

		return repeat(trenner+"",(int)Math.floor(z))+i+repeat(trenner+"",(int)(Math.floor(z)<z?Math.floor(z)+1:z));
	}

	public String endLine(){
		return "\n"+headerLine(this.test_success+" / "+(test_success+test_fail),'_');
	}

	public String randomString(Random r){
		int    a=r.nextInt(90);
		String o="";

		while(a-->0) o+=randomChar(r);
		return o;
	}

	public char randomChar(Random r){
		return (char)(r.nextInt(26)+'a');
	}
}
