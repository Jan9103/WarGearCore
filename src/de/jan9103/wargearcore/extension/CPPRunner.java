/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.extension;

import org.bukkit.Bukkit;

import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.extension.vars.CBasicOp;
import de.jan9103.wargearcore.extension.vars.CEnum;
import de.jan9103.wargearcore.extension.vars.CPP;
import de.jan9103.wargearcore.extension.vars.CSetOp;
import de.jan9103.wargearcore.extension.vars.CVar;
import de.jan9103.wargearcore.extension.vars.CVarLink;
import de.jan9103.wargearcore.extension.vars.RunnableCPP;
import de.jan9103.wargearcore.extension.vars.SCPPArr;

public class CPPRunner implements RunnableCPP {
	public final VarSet v;
	public final CPPArr a;
	public final RunnableCPP prev;
	public CPPRunner(VarSet vars,CPPArr code,RunnableCPP prev){
		v=vars; a=code; this.prev=prev;
	}

	public void jump(Integer[] l,int pre){
		if(l.length<pre){
			a.i=l[pre];
			//TODO : continue jumping
		}
		//TODO : start exec
	}

	/**
	 * @throws Exception : cancel the execution (code error)
	 */
	public void run(){
		CPP i;

		while(true){
			i=a.auto();
			if(i==null) if(a.onEnd(v)){
					prev.run(); return;
				}
			if(i instanceof CVar){
				v.acc=(CVar)i; continue;
			}
			if(i instanceof CVarLink){
				v.acc=v.get(((CVarLink)i).name); v.acc.link=((CVarLink)i).name; continue;
			}
			if(i instanceof CBasicOp){
				CVar cv=getCVar();
				if(cv==null){
					System.out.println("Extension Error: CVar basic op not set"); return;
				}
				try{v.acc=((CBasicOp)i).f.apply(v.acc,cv); continue;}catch(ArrayIndexOutOfBoundsException e){
					//TODO ERROR
					System.out.println("Extension Error: AIOOBE");
					return;
				}catch(ClassCastException e){
					//TODO ERROR
					System.out.println("Extension Error: next value shouldve been an value");
					return;
				}
			}
			if(i instanceof CEnum){
				if(i==CEnum.SLEEP){
					CVar cv=getCVar();
					if(cv==null){
						System.out.println("Extension Error: CVar set op not set"); return;
					}
					Bukkit.getScheduler().scheduleSyncDelayedTask(WGC.wgc,()->{System.out.println("continue"); this.run();},cv.toInt());
					System.out.println("Sleeping for "+cv.toInt()+"\n  "+cv.debug());
				}
				if(i==CEnum.WHILE){
					CPP cond=a.get(),whileContent=a.get();

					return;
				}
			}
			if(i instanceof CSetOp){
				CVar cv=getCVar();
				if(cv==null){
					System.out.println("Extension Error: CVar set op not set"); return;
				}
				String to=v.acc.link;
				v.acc=cv;
				if(to!=null) v.set(to,cv);
			}
		}
	}

	private CVar getCVar(){
		CPP nt=a.auto();

		if(nt instanceof SCPPArr){
			new CPPRunner(v,((SCPPArr)nt).workCopy(),this).run(); return v.acc;
		}
		if(nt instanceof CVar) return (CVar)nt;

		if(nt instanceof CVarLink) return v.get(((CVarLink)nt).name);

		return null;
	}
}
