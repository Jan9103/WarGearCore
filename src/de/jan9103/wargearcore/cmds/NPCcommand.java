/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.cmds;

import org.bukkit.entity.Player;

import com.mojang.authlib.GameProfile;

import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.chat.Msg;
import de.jan9103.wargearcore.util.NPC;
import de.jan9103.wargearcore.util.UUIDconv;

public class NPCcommand extends AsyncUserCmd {
	private final String[] a; private final User u; private final Player p;
	public NPCcommand(String[] a1,User u1,Player p1){
		a=a1; u=u1; p=p1;
	}

	public NPCcommand(){
		a=null; u=null; p=null;
	}

	@Override public void run(){
		if(a.length<1){
			new Msg(u).b("Missing Argument").a(p); return;
		}
		switch(a[0].toLowerCase()){
		case "list": {
			Msg m=new Msg(u).a("NPCs:");
			for(String i:NPC.npcs.keySet()) m.d().a(i);
			m.a(p);
			return;
		}

		case "add": {
			String name="BOB";
			if(a.length>1) name=a[1];
			if(NPC.parse(name)!=null){
				new Msg(u).b("NPC name is already in use.").a(p); return;
			}
			new NPC(p.getLocation(),name).sendSpawnPacket();
			return;
		}

		case "autoadd": {
			String name="BOB";
			if(a.length>1) name=a[1];
			GameProfile gp=UUIDconv.genGp(name);
			if(NPC.parse(name)!=null){
				new Msg(u).b("NPC name is already in use.").a(p); return;
			}
			if(gp==null){
				new Msg(u).b("Cant find Game-Profile.").a(p); return;
			}
			new NPC(p.getLocation(),name).sendSpawnPacket();
			return;
		}

		case "remove": {
			if(a.length<2){
				new Msg(u).b("Syntax: /npc remove (name)").a(p); return;
			}
			if(NPC.dispose(a[1])) new Msg(u).a("NPC "+a[1]+" has been taken care of.").a(p);
			else new Msg(u).b("Target NPC not found.").a(p);
			return;
		}

		default:
			new Msg(u).b("Unknown Sub-Command").a(p);
			return;
		}
	}

	@Override public Runnable get(String[] a,User u,Player p){
		return new NPCcommand(a,u,p);
	}
}
