/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.chat;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import net.minecraft.network.protocol.Packet;
import net.md_5.bungee.api.chat.TextComponent;
import net.md_5.bungee.chat.ComponentSerializer;

import org.bukkit.Bukkit;
import org.bukkit.Sound;
import org.bukkit.command.PluginCommand;
import org.bukkit.craftbukkit.v1_19_R3.entity.CraftPlayer;
import org.bukkit.entity.Player;

import de.jan9103.wargearcore.SoundKategory;
import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.UserManager;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.util.ColorConverter;
import net.minecraft.network.chat.IChatBaseComponent;
import net.minecraft.network.protocol.game.ClientboundSystemChatPacket;
import net.minecraft.network.chat.IChatBaseComponent.ChatSerializer;

public class UChatMsgV3 {
	private enum CColor {
		NAME,           // (text)
		HIGHLIGHT,      // (text)
		MENTION,        // (username)
		MENTION_HIGH,   // (username)
		NONE,           //
		LINK,           // (name) (link)
		REDDIT,         // "r/[]"
		COMMAND         // (command) (tooltip)
	}
	private final ArrayList<Section>al=new ArrayList<>();
	//private final User sen;
	private final String sname,sprefix,sprefixcolor,scolor,areatooltip,nametooltip;
	public UChatMsgV3(Player s,String a)throws Exception {
		User sen=UserManager.getUser(s);

		sname       =s.getName();
		sprefixcolor=sen.inFight?sen.getArenateam().getColor().toString().toLowerCase():null;
		sprefix     =sen.curAr==null?"":sen.curAr.name;
		areatooltip ="";
		nametooltip ="";
		scolor      =sen.getColor();
		a(sen.emoji,s.hasPermission("wgc.chat.img"),a,sen);
	}

	public UChatMsgV3(String sender,String sendercolor,String prefix,String prefixcolor,String msg,boolean emoji,boolean img,String areatt,String namett)throws Exception {
		scolor      =sendercolor;
		sname       =sender;
		sprefix     =prefix;
		sprefixcolor=prefixcolor;
		nametooltip =namett;
		areatooltip =areatt;
		a(emoji,img,msg,null);
	}

	//TODO: constructor without player + implement in decentral

	/**
	 *
	 * @param emoji (convert emojis?)
	 * @param hasImgPerm
	 * @param a is the msg
	 * @param sen -der can be null
	 * @throws Exception
	 */
	public void a(boolean emoji,boolean hasImgPerm,String a,User sen)throws Exception {
		if(WGC.d) System.out.println("CHAT:: "+a);
		//sen=UserManager.getUser(s);
		//boolean emoji=sen.emoji;//TODO user setting
		//TODO add rest of msg
		final char[]  b=a.toCharArray();
		int           i=0,newWord=2;
		boolean       high=false;
		StringBuilder o   =new StringBuilder();
		char          f;

		if(hasImgPerm&&b.length>3)
			if(b[0]=='%'&&b[1]=='!'){
				int z=a.indexOf(' ',i);
				if(z<=i) z=a.length();
				String url=a.substring(2,z);
				i=z;
				try{
					BufferedImage bi    =ColorConverter.scaleAuto(url,13);
					String        imgOld=ColorConverter.get(bi);
					String        imgNew=ColorConverter.img2jsonChat(bi);
					UserManager.bcImg(imgOld+" ("+sname+")",imgNew+",{\"text\":\" ("+sname+")\"}");
					return;
				}catch(IOException e){
					if(sen!=null)
						new Msg(sen).b("Unable to get Image (Either invalid URL, server offline or Cloudflare).").a(sen);
					throw new IOException("Unable to get Image (UChatMsgV3)");
				}
			}
		al.add(new Section(CColor.NAME,sname));
		while(i<b.length){
			newWord--;
			switch(f=b[i++]){
			case '*':
				if(i>=b.length){
					o.append('*'); break;
				}
				if(b[i]!='*') o.append(f);
				else{
					i++; al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString())); o=new StringBuilder(); high=!high;
				}
				continue;

			case '\\':
				if(i>=b.length){
					o.append('\\'); break;
				}
				if(b[i]=='n'){
					o.append("\n    "); i++;
				}
				continue;

			case '@': {
				if(newWord<1) break;
				al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString()));
				o=new StringBuilder();
				final int z=a.indexOf(" ",i);
				if(z<i){
					al.add(new Section(high?CColor.MENTION_HIGH:CColor.MENTION,a.substring(i))); i=b.length; continue;
				}
				al.add(new Section(high?CColor.MENTION_HIGH:CColor.MENTION,a.substring(i,z)));
				i=z; continue;
			}

			case '[': {
				int z=a.indexOf(']',i);
				if(z<=i) break;
				if(z+2>=a.length()) break;
				if(a.charAt(z+1)!='(') break;
				al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString()));
				o=new StringBuilder();
				int uu=a.indexOf(')',z);
				if(uu<=z) uu=a.length();
				al.add(new DualStrSection(CColor.LINK,a.substring(i,z),a.substring(z+2,uu)));
				i=uu+1; continue;
			}

			case 'r': {
				if(newWord<1||b.length<i) break;
				if(b[i]!='/') break;
				al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString()));
				o=new StringBuilder();
				int z=a.indexOf(' ',i);
				if(z<=i) z=a.length();
				al.add(new Section(CColor.REDDIT,"r"+a.substring(i,z)));
				i=z; continue;
			}

			case '.': {
				if(newWord<1||b.length<=i) break;
				if(b[i]!='/') break;
				al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString()));
				o=new StringBuilder();
				int z=a.indexOf(' ',i);
				if(z<=i) z=a.length();
				PluginCommand zz=Bukkit.getPluginCommand(a.substring(i+1,z));
				al.add(new DualStrSection(CColor.COMMAND,a.substring(i,z),(zz==null?"Unable to get command description":zz.getDescription())+"\nClick to prefill"));
				i=z; continue;
			}

			/*case'>':
			 *      if(newWord<1||!emoji||a.length()<i)break;
			 *      if(b[i]!=':'||b[i+1]!='(')break;
			 *      i+=2;o+="\u1F620";
			 *      continue;*/
			case 'o':
				if(newWord<1||!emoji||a.length()<=i) break;
				switch(b[i]){
				case '^': o.append("\u2642"); i++; continue;            //male

				case '+': o.append("\u2640"); i++; continue;            //female

				case 'u': o.append("\u263F"); i++; continue;            //mercury
				}
				break;

			case ':':
				if(newWord<1||!emoji||a.length()<=i) break;
				switch(b[i]){
				case '(': o.append("\u2639"); i++; continue;             // NOT HAPPY

				case ')': o.append("\u263A"); i++; continue;             // SMILE
					//case'D':o+="\u1F600";i++;continue;// LAUGH
				}
				break;

			case '<':
				if(newWord<1||!emoji||a.length()<=i) break;
				switch(b[i]){
				case '3': o.append("\u2764"); i++; continue;
				}
				break;

			case 'x':
				if(newWord<1||!emoji) break;
				if(a.length()>i&&b[i]!=' ') break;
				o.append("\u2716"); continue;

			case 'T':
				if(newWord<1||!emoji||a.length()<=i) break;
				if(b[i]=='M') o.append("\u2122"); i++; continue;

			case ' ': newWord=2;
			}
			o.append(f);
		}
		al.add(new Section(high?CColor.HIGHLIGHT:CColor.NONE,o.toString()));
	}

	public void a(){
		if(!al.isEmpty()) UserManager.bc(this);
	}

	public void a(User u){
		if(al.isEmpty()) return;

		Player p=u.getPlayer();

		if(p!=null) send(p,b(u));
	}

	public void a(User u,Player p){
		if(!al.isEmpty()) send(p,b(u));
	}

	public static void send(Player p,String s){
		p.spigot().sendMessage(ComponentSerializer.parse(s));
	}

	public String b(User u){
		final String[] f=ChatColor.b(u.ct,u.pre16);
		StringBuilder  o=new StringBuilder();

		for(final Section i:al) if(i!=null) o.append(i.a(u,f));
		return "[\"\""+o.toString()+"]";
	}

	private class Section {
		public final CColor a; public final String b;
		public Section(CColor c,String s){
			a=c; b=s.replace("\\","\\\\").replace("\n","\\n").replace("\b","\\b").replace("\"","\\\"").replace("\t","\\t");
		}

		public String a(User u,String[] f){
			switch(a){
			case MENTION:
			case MENTION_HIGH:
				if(b.equalsIgnoreCase(u.getName())){
					u.playSound(SoundKategory.CHATPING,Sound.BLOCK_BREWING_STAND_BREW,2);
					//return",{\"text\":\"@"+b+"\""+f[9]+"}";
					return ",{\"text\":\"@"+b+"\",\"clickEvent\":{\"action\":\"suggest_command\",\"value\":\"/tell "+sname+" \"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\"Send private message\"}"+f[9]+"}";
				}
				return ",{\"text\":\"@"+b+"\""+(a==CColor.MENTION?f[7]:f[8])+"}";

			case NAME: return ChatColor.bJ(u.ct,b,scolor,sprefix,sprefixcolor,u.pre16,areatooltip,nametooltip);

			case HIGHLIGHT: return ",{\"text\":\""+b+"\""+f[8]+"}";

			case REDDIT: return ",{\"text\":\""+b+"\",\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://www.reddit.com/"+b+"/\"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\"SubReddit-Link\"}"+f[10]+"}";

			default: return ",{\"text\":\""+b+"\""+f[7]+"}";
			}
		}
	}
	private class DualStrSection extends Section {
		private final String e;
		public DualStrSection(CColor c,String s,String s2){
			super(c,s); e=s2.replace("\\","\\\\").replace("\n","\\n").replace("\b","\\b").replace("\"","\\\"").replace("\t","\\t");
		}

		@Override public String a(User u,String[] f){
			switch(a){
			case LINK: return ",{\"text\":\""+b+"\",\"clickEvent\":{\"action\":\"open_url\",\"value\":\""+e+"\"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\"Link: "+e+"\"}"+f[10]+"}";

			case COMMAND: return ",{\"text\":\""+b+"\",\"clickEvent\":{\"action\":\"suggest_command\",\"value\":\""+b+"\"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\""+e+"\"}"+f[11]+"}";

			case REDDIT: return ",{\"text\":\""+b+"\",\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://www.reddit.com/"+b+"/\"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\""+e+"\"}"+f[10]+"}";

			default: return "";
			}
		}
	}
}
