/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.editors;

import org.bukkit.Material;
import org.bukkit.World;

import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.coordSys.BigCoord;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetA;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetO;

public class WallCreator {
	public static AsyncMultiEditor e(World w,BigArea area,Material m,boolean update,WeSender s){
		final BigCoord         a=area.low;
		final BigCoord         b=new BigCoord(a.x,area.high.y,area.high.z);
		final BigCoord         c=new BigCoord(area.high.x,area.high.y,a.z);
		final BigCoord         d=new BigCoord(area.high.x,a.y,area.high.z);
		final AsyncMultiEditor e=new AsyncMultiEditor(s);

		e.a(new AsyncSetO(w,new BigArea(a,b),m,update,e))
		.a(new AsyncSetO(w,new BigArea(a,c),m,update,e))
		.a(new AsyncSetO(w,new BigArea(b,d),m,update,e))
		.a(new AsyncSetO(w,new BigArea(c,d),m,update,e));
		return e;
	}

	public static AsyncMultiEditor e(World w,BigArea area,Material[] m,boolean update,WeSender s){
		final BigCoord         a=area.low;
		final BigCoord         b=new BigCoord(a.x,area.high.y,area.high.z);
		final BigCoord         c=new BigCoord(area.high.x,area.high.y,a.z);
		final BigCoord         d=new BigCoord(area.high.x,a.y,area.high.z);
		final AsyncMultiEditor e=new AsyncMultiEditor(s);

		e.a(new AsyncSetA(w,new BigArea(a,b),m,update,e))
		.a(new AsyncSetA(w,new BigArea(a,c),m,update,e))
		.a(new AsyncSetA(w,new BigArea(b,d),m,update,e))
		.a(new AsyncSetA(w,new BigArea(c,d),m,update,e));
		return e;
	}

	public static void add(AsyncMultiEditor e,World w,BigArea area,Material[] m,boolean update){
		final BigCoord a=area.low;
		final BigCoord b=new BigCoord(a.x,area.high.y,area.high.z);
		final BigCoord c=new BigCoord(area.high.x,area.high.y,a.z);
		final BigCoord d=new BigCoord(area.high.x,a.y,area.high.z);

		e.a(new AsyncSetA(w,new BigArea(a,b),m,update,e)).a(new AsyncSetA(w,new BigArea(a,c),m,update,e)).a(new AsyncSetA(w,new BigArea(b,d),m,update,e)).a(new AsyncSetA(w,new BigArea(c,d),m,update,e));
	}

	public static void add(AsyncMultiEditor e,World w,BigArea area,Material m,boolean update){
		final BigCoord a=area.low;
		final BigCoord b=new BigCoord(a.x,area.high.y,area.high.z);
		final BigCoord c=new BigCoord(area.high.x,area.high.y,a.z);
		final BigCoord d=new BigCoord(area.high.x,a.y,area.high.z);

		e.a(new AsyncSetO(w,new BigArea(a,b),m,update,e)).a(new AsyncSetO(w,new BigArea(a,c),m,update,e)).a(new AsyncSetO(w,new BigArea(b,d),m,update,e)).a(new AsyncSetO(w,new BigArea(c,d),m,update,e));
	}
}
