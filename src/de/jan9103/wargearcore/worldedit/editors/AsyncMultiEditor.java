/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.editors;

import java.util.ArrayList;

import org.bukkit.Bukkit;

import de.jan9103.wargearcore.WGC;

public class AsyncMultiEditor implements Runnable,WeSender {
	private final WeSender s;
	private final ArrayList<StackWeAction>eds=new ArrayList<>();
	public AsyncMultiEditor a(StackWeAction e){
		eds.add(e); return this;
	}

	public AsyncMultiEditor aFirst(StackWeAction e){
		eds.add(0,e); return this;
	}

	public Undo getUndo(){
		int xl=0,xh=0,yl=0,yh=0,zl=0,zh=0;

		for(StackWeAction a:eds){
			int[] e=a.area();
			if(e==null) continue;
			if(xl>e[0]) xl=e[0];
			if(xh>e[1]) xh=e[1];
			if(yl>e[2]) yl=e[2];
			if(yh>e[3]) yh=e[3];
			if(zl>e[4]) zl=e[4];
			if(zh>e[5]) zh=e[5];
		}
		Undo un=new Undo(xl,yl,zl,xh,yh,zh);

		for(StackWeAction e:eds) e.prepUndo(un);
		return un;
	}

	public void exe(){
		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,this);
	}

	private StackWeAction current;
	public void cancel(){
		eds.clear();
		current.cancel();
	}

	@Override public void run(){
		if(eds.isEmpty()){
			if(s!=null) s.onEnd(); return;
		}
		current=eds.get(0);
		eds.remove(0);
		current.a();
	}

	@Override public void onEnd(){
		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,this);
	}

	@Override public void onCancel(){
		cancel(); if(s!=null) s.onCancel();
	}

	public AsyncMultiEditor(WeSender sender){
		s=sender;
	}
}
