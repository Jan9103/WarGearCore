/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.editors;

import java.io.File;

import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.block.Block;

import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.coordSys.BigCoord;
import de.jan9103.wargearcore.worldedit.clip.Clipboard;
import de.jan9103.wargearcore.worldedit.schem.SV2i;

public class Undo {
	private final Clipboard cb;
	private final int xo,yo,zo;
	public Undo(int xl,int yl,int zl,int xh,int yh,int zh){
		xo=xl; yo=yl; zo=zl;
		cb=new Clipboard(xh-xl+1,yh-yl+1,zh-zl+1);
		cb.setOriginalCopyPoint(new BigCoord(xl,yl,zl));
	}

	public boolean unset(int x,int y,int z){
		return cb.unset(x,y,z);
	}

	public void sB(Block b){
		cb.set(b.getX()-xo,b.getY()-yo,b.getZ()-zo,b);
	}

	public void sA(BigArea a,World w){
		for(int x=a.low.x; x<=a.high.x; x++)
			for(int y=a.low.y; y<=a.high.y; y++)
				for(int z=a.low.z; z<=a.high.z; z++)
					/*if(cb.unset(x-xo,y-yo,z-zo))*/ cb.set(x-xo,y-yo,z-zo,w.getBlockAt(x,y,z));
	}

	public void sA(int xl,int xh,int yl,int yh,int zl,int zh,World w){
		int xm=xh-xl,ym=yh-yl,zm=zh-zl;

		for(int x=0; x<=xm; x++)
			for(int y=0; y<=ym; y++)
				for(int z=0; z<=zm; z++)
					/*if(cb.unset(x,y,z))*/ cb.set(x,y,z,w.getBlockAt(x+xo,y+yo,z+zo));
	}

	public void s(File f){
		System.out.println((cb.clip==null)+" "+cb.xSize()+" "+cb.ySize()+" "+cb.zSize());
		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,()->{if(new SV2i().save(f,cb)) f.setLastModified(System.currentTimeMillis()); else Bukkit.getLogger().warning("[WGC] Failed to save undo: "+f.getAbsolutePath()); });
	}
}
