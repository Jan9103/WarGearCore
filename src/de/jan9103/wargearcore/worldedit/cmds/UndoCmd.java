/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.cmds;

import java.io.File;

import org.bukkit.entity.Player;

import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.chat.Msg;
import de.jan9103.wargearcore.cmds.UserOnlyCmd;
import de.jan9103.wargearcore.worldedit.clip.Clipboard;
import de.jan9103.wargearcore.worldedit.schem.SchemFormat;

public class UndoCmd extends UserOnlyCmd {
	@Override public void exe(String[] a,User u,Player p){
		if(a.length<1){
			if(u.noArgUndoList) list(u,p);
			else p.performCommand("/(undo paste "+u.undoId);
			return;
		}
		switch(a[0].toLowerCase()){
		case "load": {
			if(a.length<2){
				new Msg(u,WGC._PREFIX_2_Edit).a("use /(undo list.").a(p); return;
			}
			File f=getFile(a[1],new File(WGC.dataFolder+"/user/clipboard/"+u.uuid.toString()));
			if(f==null){
				new Msg(u,WGC._PREFIX_2_Edit).b("Invalid undo(-file) name.").a(p); return;
			}
			Clipboard c=SchemFormat.parseAndLoad(f);
			if(c==null){
				new Msg(u,WGC._PREFIX_2_Edit).b("Unable to load file..").a(p); return;
			}
			u.cbv2.set(c);
			new Msg(u,WGC._PREFIX_2_Edit).a("Loaded Undo to Clipboard.").a(p);
			return;
		}

		case "list": list(u,p); return;

		case "paste": {
			if(a.length<2){
				Msg.missArg(u,"Edit",p); return;
			}
			File f=getFile(a[1],new File(WGC.dataFolder+"/user/clipboard/"+u.uuid.toString()));
			if(f==null){
				new Msg(u,WGC._PREFIX_2_Edit).b("Invalid undo(-file) name.").a(p); return;
			}
			Clipboard c=SchemFormat.parseAndLoad(f);
			if(c==null){
				new Msg(u,WGC._PREFIX_2_Edit).b("Unable to load file..").a(p); return;
			}
			c.autoPasteUndo(p.getWorld(),u);
			return;
		}

		case "on": u.saveUndo=true; new Msg(u).a("now saving undos").a(p); return;

		case "off": u.saveUndo=false; new Msg(u).a("no longer saving undos").a(p); return;
		}
	}

	private void list(User u,Player p){
		File f=new File(WGC.dataFolder+"/user/clipboard/"+u.uuid.toString());
		Msg  m=new Msg(u).d("==== ").a("Undos").d(" ====");

		for(File i:f.listFiles()) if(i.getName().charAt(0)=='u')
				m.d().aC(i.getName().substring(1,i.getName().length()-6)+" "+WGC.sdf(i.lastModified())
					 ,Msg.RUN,"/(undo paste "+i.getName(),"paste");
		m.a(p);
	}

	private File getFile(String in,File f){
		{File i=new File(f+"/"+in); if(i.exists()) return i; }
		for(File i:f.listFiles()){
			String nm=i.getName();
			if(nm.charAt(0)!='u') continue;
			if(in==nm) return i;

			if(nm.substring(1).startsWith(in)) return i;
		}
		return null;
	}
}
