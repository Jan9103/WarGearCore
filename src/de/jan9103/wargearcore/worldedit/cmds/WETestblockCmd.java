/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.cmds;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.block.BlockFace;
import org.bukkit.entity.Player;

import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.chat.Msg;
import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.util.Parser;
import de.jan9103.wargearcore.worldedit.WEArea;
import de.jan9103.wargearcore.worldedit.editors.AsyncMultiEditor;
import de.jan9103.wargearcore.worldedit.editors.WallCreator;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetO;

public class WETestblockCmd extends WorldEditCmd {
	@Override public void exec(String[] args,User u,Player p){
		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,()->{
			final WEArea a=u.getWE();
			if(a==null){
				new Msg(u,WGC._PREFIX_2_Edit).b("Select an area first.").a(p);
				return;
			}
			if(!a.isset()){
				new Msg(u,WGC._PREFIX_2_Edit).b("Select an area first.").a(p);
				return;
			}
			final BigArea ba        =a.toBigArea();
			final AsyncMultiEditor e=new AsyncMultiEditor(u);
			e.a(new AsyncSetO(a.w,ba.cutTb(),Material.END_STONE,false,e)).a(new AsyncSetO(a.w,ba.cutOutter().upperPart(),Material.COBBLESTONE_SLAB,false,e));
			WallCreator.add(e,a.w,ba,new Material[] {Material.GREEN_WOOL,Material.LIME_WOOL},false);
			WallCreator.add(e,a.w,ba.midEbene(),Material.RED_WOOL,false);
			final BlockFace dir=Parser.small2DDir(u.eyeLoc().getDirection());
			switch(dir){
			case EAST:
				if(ba.xSize()<4) break;
				e.a(new AsyncSetO(a.w,ba.xCutHigh(Integer.min(ba.xSize()/4,10)).cutUpperY().cutOuterZ(),Material.IRON_BLOCK,false,e));
				break;

			case NORTH:
				if(ba.zSize()<4) break;
				e.a(new AsyncSetO(a.w,ba.zCutLow(Integer.min(ba.zSize()/4,10)).cutUpperY().cutOuterX(),Material.IRON_BLOCK,false,e));
				break;

			case SOUTH:
				if(ba.zSize()<4) break;
				e.a(new AsyncSetO(a.w,ba.zCutHigh(Integer.min(ba.zSize()/4,10)).cutUpperY().cutOuterX(),Material.IRON_BLOCK,false,e));
				break;

			case WEST:
				if(ba.xSize()<4) break;
				e.a(new AsyncSetO(a.w,ba.xCutLow(Integer.min(ba.xSize()/4,10)).cutUpperY().cutOuterZ(),Material.IRON_BLOCK,false,e));
				break;

			default:
				new Msg(u,WGC._PREFIX_2_Edit).b("Unable to check which direction you are looking - please move your mouse and try again.").a(p);
				return;
			}
			if(u.saveUndo) u.saveUndo(e.getUndo(),"tb");
			e.exe();
		});
	}
}
