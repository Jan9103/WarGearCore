/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.schem;

import java.io.File;

import de.jan9103.wargearcore.worldedit.clip.Clipboard;

public abstract class SchemFormat {
	public abstract Clipboard load(File f);

	/**
	 * @return Erfolg?
	 */
	public abstract boolean save(File f,Clipboard c);

	public static SchemFormat parseFormat(File f){
		if(!f.exists()) return null;

		if(!f.isFile()) return null;

		final String[] tmp=f.getName().split(".");

		if(tmp.length==0) return null;

		switch(tmp[tmp.length-1]){
		case "jsv2iz": return new SV2iz();

		case "jsv2i": return new SV2i();

		case "jsv2": return new SV2();
		}
		return null;
	}

	public static Clipboard parseAndLoad(File f){
		if(f==null) return null;

		if(!f.exists()) return null;

		if(!f.isFile()) return null;

		int x; if((x=f.getName().indexOf('.')+1)<2) return null;

		switch(f.getName().substring(x)){
		case "jsv2iz": return new SV2iz().load(f);

		case "jsv2i": return new SV2i().load(f);

		case "jsv2": return new SV2().load(f);
		}
		return null;
	}
}
