/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.schem;

import de.jan9103.wargearcore.LogHandler;
import de.jan9103.wargearcore.worldedit.clip.Clipboard;
import org.bukkit.Bukkit;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.DeflaterOutputStream;
import java.util.zip.InflaterInputStream;

public class SV2iz extends SchemFormat {
	@Override public Clipboard load(File f){
		if(!f.exists()) return null;

		FileInputStream fis=null;

		try{
			fis=new FileInputStream(f);
			return SV2i.decompress(new InflaterInputStream(fis));
		}catch(final IOException e){if(fis!=null) try{fis.close();}catch(final IOException e1){}
					    LogHandler.handleException(e); return null;}
	}

	@Override public boolean save(File f,Clipboard c){
		FileOutputStream fos=null;

		try{
			if(c==null){
				Bukkit.getLogger().warning("Tried to save NULL clipboard"); return false;
			}
			if(c.clip==null){
				Bukkit.getLogger().warning("Tried to save NULL clipboard array"); return false;
			}
			if(!f.exists()) try{f.getParentFile().mkdirs(); f.createNewFile();}catch(final IOException e){}
			if(!f.exists()){
				Bukkit.getLogger().warning("Failed to create schem file (SV2i-save)"); return false;
			}
			fos=new FileOutputStream(f);
			boolean ret=SV2i.compress(new DeflaterOutputStream(fos),c); // TODO allow Deflater.BEST_COMPRESSION
			f.setLastModified(System.currentTimeMillis());
			return ret;
		}catch(final IOException e){if(fos!=null) try{fos.close();}catch(final IOException e1){}LogHandler.handleException(e); return false;}
	}
}
