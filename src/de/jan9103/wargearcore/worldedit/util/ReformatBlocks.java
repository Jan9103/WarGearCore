/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.util;

import java.util.ArrayList;

import org.bukkit.Material;
import org.bukkit.block.data.Powerable;

public class ReformatBlocks {
	public static Material parseM(String in){
		for(final Material m:Material.values())
			if(m.toString().equalsIgnoreCase(in)) return m;

		return null;
	}

	public static Material[] parseIn(String in){
		final String[]           ms =in.split(",");
		final ArrayList<Material>out=new ArrayList<>();

		for(final String s:ms){
			final Material m=parseM(s);
			if(m!=null) out.add(m);
		}
		if(out.isEmpty()) return null;

		final Material[] o=new Material[out.size()];

		for(int i=0; i<o.length; i++) o[i]=out.get(i);
		return o;
	}

	public static Material toFullBlock(Material m){
		final String s=m.toString();

		if(s.endsWith("_STAIRS")||s.endsWith("_SLAB")||s.endsWith("_BUTTON")||s.endsWith("_WALL")){
			if(s.startsWith("DARK_OAK_")) return Material.DARK_OAK_PLANKS;

			if(s.startsWith("OAK_")) return Material.OAK_PLANKS;

			if(s.startsWith("ACACIA_")) return Material.ACACIA_PLANKS;

			if(s.startsWith("BIRCH_")) return Material.BIRCH_PLANKS;

			if(s.startsWith("JUNGLE_")) return Material.JUNGLE_PLANKS;

			if(s.startsWith("SPRUCE_")) return Material.SPRUCE_PLANKS;

			if(s.startsWith("BRICK_")) return Material.BRICK;

			if(s.startsWith("SANDSTONE_")) return Material.SANDSTONE;

			if(s.startsWith("SMOOTH_SANDSTONE_")) return Material.SMOOTH_SANDSTONE;

			if(s.startsWith("SMOOTH_QUARTZ")) return Material.SMOOTH_QUARTZ;

			if(s.startsWith("SMOOTH_STONE_")) return Material.SMOOTH_STONE;

			if(s.startsWith("STONE_")) return Material.STONE;

			if(s.startsWith("ANDESITE_")) return Material.ANDESITE;

			if(s.startsWith("DIORITE_")) return Material.DIORITE;

			if(s.startsWith("STONE_BRICK_")) return Material.STONE_BRICKS;

			if(s.startsWith("CUT_RED_SANDSTONE_")) return Material.CUT_RED_SANDSTONE;

			if(s.startsWith("CUT_SANDSTONE_")) return Material.CUT_SANDSTONE;

			if(s.startsWith("PURPUR_")) return Material.PURPUR_BLOCK;

			if(s.startsWith("COBBLESTONE_")) return Material.COBBLESTONE;

			if(s.startsWith("DARK_PRISMARINE")) return Material.DARK_PRISMARINE;

			if(s.startsWith("END_STONE_BRICK")) return Material.END_STONE_BRICKS;
		}
		return m;
	}

	public static Material gateToFence(Material m){
		final String s=m.toString();

		if(s.endsWith("_GATE"))
			switch(s.charAt(0)){
			case 'D': return Material.DARK_OAK_FENCE;

			case 'O': return Material.OAK_FENCE;

			case 'A': return Material.ACACIA_FENCE;

			case 'B': return Material.BIRCH_FENCE;

			case 'J': return Material.JUNGLE_FENCE;

			case 'S': return Material.JUNGLE_FENCE;
			}
		return m;
	}

	public static boolean isTech(Material m){
		return m.createBlockData() instanceof Powerable;
	}
}
