/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.worldedit.clip;

import java.io.File;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.block.Block;

import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.worldedit.WEArea;
import de.jan9103.wargearcore.worldedit.schem.SV2i;

public class CBv2 {
	private Clipboard cb=null;
	private final File f;
	private short unload;
	//private boolean callB;
	public static final short UNLOAD_TIME=4;
	public void tick(){
		if(unload==0) unload(); else unload--;
	}

	public CBv2(UUID id,String nm){
		new File(WGC.dataFolder+"/user/clipboard/"+id.toString()).mkdir();
		f=new File(WGC.dataFolder+"/user/clipboard/"+id.toString()+"/"+nm);
	}

	public boolean exists(){
		return cb!=null||f.exists();
	}

	/**
	 * should be called async
	 */
	public Clipboard getAndWait(){
		unload=UNLOAD_TIME;
		if(cb!=null) return cb;

		loadAndJoin();
		return cb;
	}

	/**
	 * SYNC CALLING ONLY !!!
	 */
	public void unload(){
		if(cb==null) return; if(cb.cv==null) return;

		final Clipboard c=cb.dupe();

		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,(Runnable)()->{
			new SV2i().save(f,c);
			Bukkit.getScheduler().runTask(WGC.wgc,(Runnable)()->cb=null);
		});
	}

	private void loadAndJoin(){
		cb=new SV2i().load(f); unload=UNLOAD_TIME;
		//callB=true;
		//Bukkit.getScheduler().runTask(WGC.wgc,()->{cb=c;unload=UNLOAD_TIME;callB=false;});
		//while(callB)try{Thread.sleep(0,100);}catch(final InterruptedException e){}
	}

	/**
	 * SYNC CALLING ONLY !!!
	 */
	public void copy(WEArea a,Block l){
		cb=new Clipboard(a,l); unload=UNLOAD_TIME;
	}

	/**
	 * SYNC CALLING ONLY !!!
	 */
	public void set(Clipboard c){
		cb=c; unload=UNLOAD_TIME;
	}

	public void sheduleSet(Clipboard c){
		Bukkit.getScheduler().runTask(WGC.wgc,(Runnable)()->{cb=c; unload=UNLOAD_TIME;});
	}
}
