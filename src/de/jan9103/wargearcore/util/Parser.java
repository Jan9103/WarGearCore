/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.util;

import org.bukkit.block.BlockFace;
import org.bukkit.util.Vector;

public class Parser {
	public static BlockFace smallDir(Vector v){
		if(v.getY()>0.9) return BlockFace.UP;

		if(v.getY()<-0.9) return BlockFace.DOWN;

		return small2DDir(v);
	}

	public static BlockFace small2DDir(Vector v){
		if(v.getZ()<-0.7) return BlockFace.NORTH;

		if(v.getZ()>0.7) return BlockFace.SOUTH;

		if(v.getX()<0) return BlockFace.WEST;

		return BlockFace.EAST;
	}

	public static BlockFace smallBiDir(Vector v){
		if(v.getZ()<-0.7)
			return BlockFace.NORTH;

		return BlockFace.SOUTH;
	}

	public static int integer(String in){
		int          out=0;
		final char[] c  =in.toCharArray();

		for(final char i : c){
			byte t=10;
			switch(i){
			case '1': t=1; break;

			case '2': t=2; break;

			case '3': t=3; break;

			case '4': t=4; break;

			case '5': t=5; break;

			case '6': t=6; break;

			case '7': t=7; break;

			case '8': t=8; break;

			case '9': t=9; break;

			case '0': t=0; break;

			default: return out;
			}
			if(t==10) continue;
			out*=10;
			out+=t;
		}
		return out;
	}
}
