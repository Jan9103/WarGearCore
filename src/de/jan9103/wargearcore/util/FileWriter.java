/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.util;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class FileWriter {
	public static byte[] read(File f)throws IOException {
		final FileInputStream fis =new FileInputStream(f);
		final byte[]          data=new byte[(int)f.length()];

		fis.read(data);
		fis.close();
		return data;
	}

	public static String readUTF8(File f)throws IOException {
		final FileInputStream   fis=new FileInputStream(f);
		final InputStreamReader isr=new InputStreamReader(fis,StandardCharsets.UTF_8);
		final BufferedReader    r=new BufferedReader(isr);
		String out="",tmp;

		while((tmp=r.readLine())!=null) out+=tmp+"\n";
		//out.substring(0,out.length()-1);
		r.close();
		//isr.close();
		//fis.close();
		return out;
	}

	public static void writeUTF8(File f,String s)throws IOException {
		final OutputStreamWriter w=new OutputStreamWriter(new FileOutputStream(f),StandardCharsets.UTF_8);

		w.write(s);
		w.flush();
		w.close();
	}

	public static void write(File f,byte[] content)throws IOException {
		final FileOutputStream stream=new FileOutputStream(f);

		for(final byte b:content) stream.write(b);
		stream.close();
	}

	public static void writeStrV2(File f,String s)throws IOException {
		final FileOutputStream stream=new FileOutputStream(f);

		for(final byte b:s.getBytes()) stream.write(b);
		stream.flush();
		stream.close();
	}

	public static String readStrV2(File f)throws IOException {
		final FileInputStream fis =new FileInputStream(f);
		final byte[]          data=new byte[(int)f.length()];

		fis.read(data);
		fis.close();
		return new String(data);
	}

	public static void write(File f,String s)throws IOException {
		write(f,Base64.getDecoder().decode(s));
	}

	public static String readStr(File f)throws IOException {
		return read(f).toString();
	}
}
