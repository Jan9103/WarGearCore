/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.util;

import java.util.HashMap;
import java.util.Map.Entry;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.craftbukkit.v1_15_R1.CraftServer;
import org.bukkit.craftbukkit.v1_15_R1.CraftWorld;
import org.bukkit.craftbukkit.v1_15_R1.entity.CraftPlayer;
import org.bukkit.entity.Player;

import com.mojang.authlib.GameProfile;

import net.minecraft.server.v1_15_R1.DataWatcher;
//import net.minecraft.server.v1_15_R1.DataWatcherObject;
//import net.minecraft.server.v1_15_R1.DataWatcherRegistry;
import net.minecraft.server.v1_15_R1.EntityPlayer;
import net.minecraft.server.v1_15_R1.MinecraftServer;
import net.minecraft.server.v1_15_R1.PacketPlayOutEntity;
import net.minecraft.server.v1_15_R1.PacketPlayOutEntityDestroy;
import net.minecraft.server.v1_15_R1.PacketPlayOutEntityHeadRotation;
import net.minecraft.server.v1_15_R1.PacketPlayOutEntityMetadata;
import net.minecraft.server.v1_15_R1.PacketPlayOutNamedEntitySpawn;
import net.minecraft.server.v1_15_R1.PacketPlayOutPlayerInfo;
import net.minecraft.server.v1_15_R1.PlayerConnection;
import net.minecraft.server.v1_15_R1.PlayerInteractManager;
import net.minecraft.server.v1_15_R1.WorldServer;

public class NPC {
	public static HashMap<String,NPC>npcs=new HashMap<>();
	public static NPC parse(String name){
		for(Entry<String,NPC>i:npcs.entrySet())
			if(i.getKey().equalsIgnoreCase(name)) return i.getValue();

		return null;
	}

	/**
	 * @param name
	 * @return existed?
	 */
	public static boolean dispose(String name){
		for(Entry<String,NPC>i:npcs.entrySet())
			if(i.getKey().equalsIgnoreCase(name)){
				i.getValue().sendRemovePacket();
				npcs.remove(i.getKey(),i.getValue());
				return true;
			}
		return false;
	}

	public final EntityPlayer player;
	public final boolean skin;
	public NPC(Location l,String name){
		MinecraftServer       nmsServ =((CraftServer)Bukkit.getServer()).getServer();
		WorldServer           nmsWorld=((CraftWorld)l.getWorld()).getHandle();
		GameProfile           gp      =new GameProfile(UUID.randomUUID(),name);
		PlayerInteractManager pim     =new PlayerInteractManager(nmsWorld);

		player=new EntityPlayer(nmsServ,nmsWorld,gp,pim);
		player.setLocation(l.getX(),l.getY(),l.getZ(),l.getYaw(),l.getPitch());
		npcs.put(name,this);
		skin=false;
	}

	public NPC(Location l,String name,GameProfile gp){
		MinecraftServer       nmsServ =((CraftServer)Bukkit.getServer()).getServer();
		WorldServer           nmsWorld=((CraftWorld)l.getWorld()).getHandle();
		PlayerInteractManager pim     =new PlayerInteractManager(nmsWorld);

		player=new EntityPlayer(nmsServ,nmsWorld,gp,pim);
		player.setLocation(l.getX(),l.getY(),l.getZ(),l.getYaw(),l.getPitch());
		skin=true;
		//player.getDataWatcher().watch(10,(byte)0xFF);
//		byte flags = (byte) 0xFF;
//		DataWatcher watcher = player.getDataWatcher();
//		watcher.set(new DataWatcherObject<>(13, DataWatcherRegistry.a),flags);
//		watcher.set(new DataWatcherObject<>(15, DataWatcherRegistry.a),/*(byte)127*/flags);
//		watcher.set(new DataWatcherObject<>(10, DataWatcherRegistry.a),flags);
		npcs.put(name,this);
	}

	public void sendSpawnPacket(Player p){
		PlayerConnection pc=((CraftPlayer)p).getHandle().playerConnection;

		if(skin){
			DataWatcher watcher=player.getDataWatcher();
			PacketPlayOutEntityMetadata packet=new PacketPlayOutEntityMetadata(player.getId(),watcher,true);
			pc.sendPacket(packet);
		}
		pc.sendPacket(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER,player));
		pc.sendPacket(new PacketPlayOutNamedEntitySpawn(player));
		pc.sendPacket(new PacketPlayOutEntityHeadRotation(player,(byte)(player.yaw*256/360)));
	}

	public void move(double x,double y,double z){
		for(Player p:Bukkit.getOnlinePlayers())
			((CraftPlayer)p).getHandle().playerConnection
			.sendPacket(new PacketPlayOutEntity.PacketPlayOutRelEntityMove(player.getId(),(short)(x*4096),(short)(y*4096),(short)(z*4096),true));
	}

	public void sendSpawnPacket(){
		for(Player i:Bukkit.getOnlinePlayers()) sendSpawnPacket(i);
	}

	public void sendRemovePacket(Player p){
		PlayerConnection pc=((CraftPlayer)p).getHandle().playerConnection;

		pc.sendPacket(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.REMOVE_PLAYER,player));
		pc.sendPacket(new PacketPlayOutEntityDestroy(player.getId()));
	}

	public void sendRemovePacket(){
		for(Player i:Bukkit.getOnlinePlayers()) sendRemovePacket(i);
	}
}
