/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.util;

import java.lang.reflect.Field;

import org.bukkit.Bukkit;
import org.bukkit.craftbukkit.v1_15_R1.entity.CraftPlayer;
import org.bukkit.entity.Player;

import de.jan9103.wargearcore.LogHandler;
import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.chat.ChatColor;
import de.jan9103.wargearcore.listener.ExplosionListener;
import de.jan9103.wargearcore.listener.FreezeListener;
import net.minecraft.server.v1_15_R1.ChatComponentText;
import net.minecraft.server.v1_15_R1.PacketPlayOutPlayerListHeaderFooter;
import net.minecraft.server.v1_15_R1.PlayerConnection;

public class Tab {
	public static boolean on=true;
	public static void auto(Player p,User u){
		if(!on) return;

		Bukkit.getScheduler().runTaskAsynchronously(WGC.wgc,()->{
			String[] f=ChatColor.a(u.ct);
			String o  =f[0]+"TPS: "+f[1]+TPS.b()+f[0]+" Ping: "+f[1];
			try{
				Object entityPlayer=p.getClass().getMethod("getHandle").invoke(p);
				o+=(int)entityPlayer.getClass().getField("ping").get(entityPlayer);
			}catch(Exception e){o+="?";}
			if(u.advancedTab){
				o+=f[0]+"\nWFreeze: "+(FreezeListener.active.contains(p.getWorld().getName())?"on":"off")
				    +" WTnt: "+(ExplosionListener.tntOn.contains(p.getWorld().getName())?"on":"off");
				if(u.curAr!=null)
					o+=f[0]+"\nFreeze: "+f[1]+(u.curAr.isFrozen()?"on":"off")
					    +f[0]+" Tnt: "+f[1]+(u.curAr.isntProt()?"on":"off");
			}
			sendBoth(p,f[0]+WGC.servername,o);
		});
	}

	public static void sendBoth(Player p,String head,String foot){
		if(!on) return;

		CraftPlayer      cp=(CraftPlayer)p;
		PlayerConnection pc=cp.getHandle().playerConnection;
		PacketPlayOutPlayerListHeaderFooter packet=new PacketPlayOutPlayerListHeaderFooter();
		Object header=new ChatComponentText(head);
		Object footer=new ChatComponentText(foot);

		try{
			Field a=packet.getClass().getDeclaredField("header");
			a.setAccessible(true);
			Field b=packet.getClass().getDeclaredField("footer");
			b.setAccessible(true);
			a.set(packet,header);
			b.set(packet,footer);
			pc.sendPacket(packet);
		}catch(Exception e){LogHandler.handleException(e);}
	}

	public static void sendHeader(Player p,String txt){
		if(!on) return;

		CraftPlayer      cp=(CraftPlayer)p;
		PlayerConnection pc=cp.getHandle().playerConnection;
		PacketPlayOutPlayerListHeaderFooter packet=new PacketPlayOutPlayerListHeaderFooter();
		Object header=new ChatComponentText(txt);

		try{
			Field a=packet.getClass().getDeclaredField("header");
			a.setAccessible(true);
			a.set(packet,header);
			pc.sendPacket(packet);
		}catch(Exception e){LogHandler.handleException(e);}
	}

	public static void sendFooter(Player p,String txt){
		if(!on) return;

		CraftPlayer      cp=(CraftPlayer)p;
		PlayerConnection pc=cp.getHandle().playerConnection;
		PacketPlayOutPlayerListHeaderFooter packet=new PacketPlayOutPlayerListHeaderFooter();
		Object header=new ChatComponentText(txt);

		try{
			Field b=packet.getClass().getDeclaredField("footer");
			b.setAccessible(true);
			b.set(packet,header);
			pc.sendPacket(packet);
		}catch(Exception e){LogHandler.handleException(e);}
	}
}
