/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.fight.listener;

import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.entity.Projectile;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.projectiles.ProjectileSource;

import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.UserManager;

public class NoTeamPvp implements Listener {
	@EventHandler public void onDmg(EntityDamageByEntityEvent e){
		if(!(e.getEntity() instanceof Player)) return;

		Entity source=e.getDamager();

		while(source instanceof Projectile){
			ProjectileSource s=((Projectile)source).getShooter();
			if(s==null) return;

			if(!(s instanceof Entity)) return;

			source=(Entity)s;
		}
		if(source instanceof Player){
			final User u=UserManager.getUser((Player)e.getEntity());
			if(u.getArenateam()==null) return;

			final User a=UserManager.getUser((Player)source);
			if(u.getArenateam()!=a.getArenateam()) return;

			switch(u.getArenateam().getTeamPvp()){
			case CANCEL:
				e.setCancelled(true);
				return;

			case DENY:
				e.setDamage(0);
				return;

			default:
				return;
			}
		}
	}
}
