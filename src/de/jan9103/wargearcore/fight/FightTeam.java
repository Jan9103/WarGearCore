/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.fight;

import java.util.HashSet;

import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Sound;
import org.bukkit.scoreboard.Team;
import org.bukkit.scoreboard.Team.Option;
import org.bukkit.scoreboard.Team.OptionStatus;

import de.jan9103.wargearcore.SoundKategory;
import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.area.WgArea;

public class FightTeam {
	public final HashSet<Fighter>users=new HashSet<>();
	public final HashSet<Fighter>alife=new HashSet<>();
	private PvpMode teamPvp;
	private final Team team;
	private final ChatColor color;
	private final String name;
	private final Fight f;
	public FightTeam(Fight fi,String n,ChatColor c){
		f   =fi; final WgArea a=f.area;
		team=a.sb.registerNewTeam(n);
		team.setColor(c);
		name =n;
		color=c;
		team.setOption(Option.COLLISION_RULE,Team.OptionStatus.NEVER);
		team.setOption(Option.NAME_TAG_VISIBILITY,OptionStatus.FOR_OWN_TEAM);
	}

	public void add(User u){
		users.add(u); f.pl.getScore(u.getName()).setScore(0);
	}

	public void remove(User u){
		users.remove(u); f.area.sb.resetScores(u.getName());
	}

	public void spawnAll(Location l){
		for(final Fighter u:users) u.fightTp(l);
	}

	public void ready(Location l){
		alife.clear();
		for(final Fighter u:users){
			if(u instanceof User) f.inventory.apply(((User)u).getPlayer());
			u.fightTp(l);
			u.fightReady();
			alife.add(u);
		}
	}

	public void start(){
		for(final Fighter u:users)
			u.fightStart();
	}

	public PvpMode getTeamPvp(){
		return teamPvp;
	}

	public void setTeamPvp(PvpMode teamPvp){
		this.teamPvp=teamPvp;
	}

	public void PlaySound(SoundKategory k,Sound s,int pitch){
		for(Fighter f:users)
			if(f instanceof User)
				((User)f).playSound(k,s,pitch);
	}

	public void setLevel(int level){
		for(final Fighter u:users) u.fightSetXp(level);
	}

	public String getName(){
		return name;
	}

	public ChatColor getColor(){
		return color;
	}
}
