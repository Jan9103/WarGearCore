/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.area.tb;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.bukkit.Material;
import org.bukkit.World;

import de.jan9103.wargearcore.C;
import de.jan9103.wargearcore.WGC;
import de.jan9103.wargearcore.area.ATheme;
import de.jan9103.wargearcore.area.TbCmd;
import de.jan9103.wargearcore.area.ThemeMat;
import de.jan9103.wargearcore.area.WgArea;
import de.jan9103.wargearcore.area.tb.s.Shield;
import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.worldedit.editors.AsyncMultiEditor;
import de.jan9103.wargearcore.worldedit.editors.WallCreator;
import de.jan9103.wargearcore.worldedit.editors.WeSender;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetO;

public class TB2 extends TB {
	public TB2(){
	}

	public TB2(C c){
		List<String>sl=c.gsl("shields");

		for(String i:sl){
			String[] ta=i.split(" ");
			String[] na=new String[ta.length+1];
			na[0]="";
			System.arraycopy(ta,0,na,1,ta.length);
			Shield ts=TbCmd.pS(na,null,null);
			if(ts!=null) s.add(ts);
		}
	}

	@Override public AsyncMultiEditor pLater(WgArea ar,WeSender s){
		final World            w=ar.w;
		final BigArea          a=ar.redWg;
		final AsyncMultiEditor e=new AsyncMultiEditor(s);

		{
			final BigArea ba=a.cutTb();
			boolean       zz=false;
			for(int i=ba.zSize()-1; i>=0; i--)
				e.a(new AsyncSetO(w,ba.z(i),(zz=!zz)?Material.END_STONE:Material.END_STONE_BRICKS,false,e));
		}
		e.a(new AsyncSetO(w,a.cutOutter().upperPart(),ATheme.get(ar.thm,ThemeMat.OWN_SLAB,true),false,e));
		WallCreator.add(e,w,a,new Material[] {ATheme.get(ar.thm,ThemeMat.OWN_DARK,true),ATheme.get(ar.thm,ThemeMat.OWN_LIGHT,true)},false);
		WallCreator.add(e,w,a.midEbene(),ATheme.get(ar.thm,ThemeMat.OWN_MARKER,true),false);
		//TK marker
		if(a.zSize()>7)
			e.a(new AsyncSetO(w,a.zCutHigh(Integer.min(a.zSize()/4,10)).cutUpperY(),ATheme.get(ar.thm,ThemeMat.OWN_MARKER,true),false,e))
			.a(new AsyncSetO(w,a.zCutHigh(Integer.min(a.zSize()/4,10)).toSmall().toBigArea(a.high.y).cutOuterX(),ATheme.get(ar.thm,ThemeMat.OWN_SLAB_HIGH,true),false,e));
		// Tannenbaum
		if(a.xSize()>7&&WGC.month()>10){
			int ri=new Random().nextInt(a.xSize()-4);
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri+2,a.low.y,a.low.z,a.low.x+ri+2,a.low.y,a.low.z),Material.OAK_LOG,false,e));
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri,a.low.y+1,a.low.z,a.low.x+ri+4,a.low.y+1,a.low.z),Material.GREEN_WOOL,false,e));
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri+1,a.low.y+2,a.low.z,a.low.x+ri+3,a.low.y+2,a.low.z),Material.GREEN_WOOL,false,e));
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri+1,a.low.y+2,a.low.z,a.low.x+ri+3,a.low.y+3,a.low.z),Material.GREEN_WOOL,false,e));
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri+2,a.low.y+3,a.low.z,a.low.x+ri+2,a.low.y+4,a.low.z),Material.GREEN_WOOL,false,e));
			e.a(new AsyncSetO(w,new BigArea(a.low.x+ri+2,a.low.y+4,a.low.z,a.low.x+ri+2,a.low.y+5,a.low.z),Material.GREEN_WOOL,false,e));
		}
		addShields(ar,e);
		return e;
	}

	@Override public void s(C c){
		c.s("tb.t",2);
		ArrayList<String>sds=new ArrayList<>();

		for(Shield i:s) sds.add(i.toString());
		c.s("shields",sds);
	}
}
