/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.area.tb.s.ts;

import java.util.Random;

import org.bukkit.Material;
import org.bukkit.World;

import de.jan9103.wargearcore.area.WgArea;
import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.worldedit.editors.AsyncMultiEditor;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncAir;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetO;

/**
 * PP T3 & SW WG
 */
public abstract class BigWgTechSim extends TechSimGen {
	public BigWgTechSim(Material[] m,Material[] t,BigArea w,Random r,AsyncMultiEditor a,WgArea c){
		super(m,t,w,r,a,c);
	}

	/**
	 * @param xO lauf laenge (>1)
	 * @param yO hoehe (>1) (max 10h)
	 * @param zO tiefe (>3)
	 */
	public void rSSidestab(AsyncMultiEditor ame,BigArea a,int xO,int yO,int zO,Random r,World w){
		final int z=a.high.z-zO,y=a.low.y+yO,kammerLength=r.nextInt(3)+7,kammerHeight=r.nextInt(3)+7;
		int       x=a.low.x+xO;

		// LEFT
		ame.a(new AsyncAir(w,new BigArea(a.low.x,y,z,x+3,y+3,z),false,ame))                                           // hinterer lauf
		.a(new AsyncAir(w,new BigArea(a.low.x,y,z-2,x+3,y+3,z-2),false,ame))                                          // vorderer lauf
		.a(new AsyncAir(w,new BigArea(x+5,y,z-1,x+5,y+kammerHeight,z-1),false,ame))                                   // rausschuss kammer
		.a(new AsyncAir(w,new BigArea(x+3,y,z,x+3,y+kammerHeight,z-1),false,ame))                                     // vorschuss kammer
		.a(new AsyncAir(w,new BigArea(x,y+2,z-3,x+1,y+kammerHeight,z-kammerLength),false,ame))                        // ausere kammer
		.a(new AsyncAir(w,new BigArea(x+5,y+2,z-3,x+6,y+kammerHeight,z-kammerLength),false,ame))                      // innere kammer
		.a(new AsyncAir(w,new BigArea(x,y+6,z-2,x+5,y+7,z-2),false,ame))                                              // gang
		.a(new AsyncSetO(w,new BigArea(x+3,y-1,z,x+3,y-1,z-2),Material.WATER,false,ame));                             //wasser
		// RIGHT
		x=a.high.x-xO;
		ame.a(new AsyncAir(w,new BigArea(a.high.x,y,z,x-3,y+3,z),false,ame))                                          // hinterer lauf
		.a(new AsyncAir(w,new BigArea(a.high.x,y,z-2,x-3,y+3,z-2),false,ame))                                         // vorderer lauf
		.a(new AsyncAir(w,new BigArea(x-5,y,z-1,x-5,y+kammerHeight,z-1),false,ame))                                   // rausschuss kammer
		.a(new AsyncAir(w,new BigArea(x-3,y,z,x-3,y+kammerHeight,z-1),false,ame))                                     // vorschuss kammer
		.a(new AsyncAir(w,new BigArea(x,y+2,z-3,x-1,y+kammerHeight,z-kammerLength),false,ame))                        // ausere kammer
		.a(new AsyncAir(w,new BigArea(x-5,y+2,z-3,x-6,y+kammerHeight,z-kammerLength),false,ame))                      // innere kammer
		.a(new AsyncAir(w,new BigArea(x,y+6,z-2,x-5,y+7,z-2),false,ame))                                              // gang
		.a(new AsyncSetO(w,new BigArea(x-3,y-1,z,x-3,y-1,z-2),Material.WATER,false,ame));                             //wasser
	}
}
