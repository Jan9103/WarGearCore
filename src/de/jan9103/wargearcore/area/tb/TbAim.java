/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.area.tb;

import java.util.Random;

import org.bukkit.World;

import de.jan9103.wargearcore.C;
import de.jan9103.wargearcore.area.ATheme;
import de.jan9103.wargearcore.area.ThemeMat;
import de.jan9103.wargearcore.area.WgArea;
import de.jan9103.wargearcore.coordSys.BigArea;
import de.jan9103.wargearcore.worldedit.editors.AsyncMultiEditor;
import de.jan9103.wargearcore.worldedit.editors.WeSender;
import de.jan9103.wargearcore.worldedit.editors.async.AsyncSetO;

public class TbAim extends TB {
	private final int si,am;
	public TbAim(int size,int amount){
		si=size; am=amount;
	}

	public TbAim(C c){
		si=c.gi("a",5); am=c.gi("b",1);
	}

	@Override public AsyncMultiEditor pLater(WgArea ar,WeSender s){
		final World            w=ar.w;
		final BigArea          a=ar.redWg;
		final AsyncMultiEditor e=new AsyncMultiEditor(s);

		e.a(new AsyncSetO(w,a,ATheme.get(ar.thm,ThemeMat.OWN_GLASS_LIGHT,true),false,e));
		int    rsX=a.high.x-a.low.x-si,rsY=a.high.y-a.low.y-si,rsZ=a.high.z-a.low.z-si;
		Random r=new Random();

		for(int i=0; i<am; i++){
			int x=r.nextInt(rsX)+a.low.x,y=r.nextInt(rsY)+a.low.y,z=r.nextInt(rsZ)+a.low.z;
			e.a(new AsyncSetO(w,new BigArea(x,y,z,x+si,y+si,z+si)
					  ,ATheme.get(ar.thm,ThemeMat.OWN_MARKER,true),false,e));
		}
		return e;
	}

	@Override public void s(C c){
		c.s("tb.t",4); c.s("tb.a",si); c.s("tb.b",am);
	}
}
