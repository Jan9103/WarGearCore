/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.wargearcore.jsvn;

import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;

import de.jan9103.wargearcore.User;
import de.jan9103.wargearcore.area.WgArea;

public class VarSet {
	private final Material[] m=new Material[10];
	private final Integer[] i =new Integer[10];
	private final Block[] b   =new Block[10];
	private final String[] s  =new String[10];
	private final boolean[] t =new boolean[10];
	private final WgArea[] a  =new WgArea[10];
	private final Player[] p  =new Player[10];

	public VarSet(){
	}

	public VarSet(Player c,User d,Block e){
		p[0]=c;
		b[0]=e;
		b[1]=c.getLocation().getBlock();
		a[0]=d.curAr;
		s[0]=c.getName();
		if(c.getInventory().getItemInOffHand()!=null) m[1]=c.getInventory().getItemInOffHand().getType();
		m[0]=Material.AIR;
	}

	public Material gM(byte a){
		if(a<0||a>9) return Material.AIR; return m[a];
	}

	public Material gMe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return m[a];
	}

	public void sM(byte a,Material b){
		if(a<0||a>9) return; m[a]=b;
	}

	public int gI(byte a){
		if(a<0||a>9) return 0; return i[a];
	}

	public int gIe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return i[a];
	}

	public void sI(byte a,int b){
		if(a<0||a>9) return; i[a]=b;
	}

	public Block gB(byte a){
		if(a<0||a>9) return null; return b[a];
	}

	public Block gBe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return b[a];
	}

	public void sB(byte a,Block c){
		if(a<0||a>9) return; b[a]=c;
	}

	public String gS(byte a){
		if(a<0||a>9) return ""; return s[a];
	}

	public String gSe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return s[a];
	}

	public void sS(byte a,String b){
		if(a<0||a>9) return; s[a]=b;
	}

	public boolean gT(byte a){
		if(a<0||a>9) return false; return t[a];
	}

	public boolean gTe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return t[a];
	}

	public void sT(byte a,boolean b){
		if(a<0||a>9) return; t[a]=b;
	}

	public WgArea gA(byte c){
		if(c<0||c>9) return null; return a[c];
	}

	public WgArea gAe(byte c)throws ArrayIndexOutOfBoundsException {
		if(c<0||c>9) throw new ArrayIndexOutOfBoundsException(); return a[c];
	}

	public void sA(byte c,WgArea b){
		if(c<0||c>9) return; a[c]=b;
	}

	public Player gP(byte a){
		if(a<0||a>9) return null; return p[a];
	}

	public Player gPe(byte a)throws ArrayIndexOutOfBoundsException {
		if(a<0||a>9) throw new ArrayIndexOutOfBoundsException(); return p[a];
	}

	public void sP(byte a,Player b){
		if(a<0||a>9) return; p[a]=b;
	}

	public String a(String s){
		int f;

		while((f=s.indexOf('.'))!=-1){
			if(s.length()<f+2) break;
			String g="";
			switch(Character.toLowerCase(s.charAt(f+1))){
			case 'i': g=gI(a(s.charAt(f+2)))+""; break;

			case 'm': g=gM(a(s.charAt(f+2))).name(); break;

			case 's': g=gS(a(s.charAt(f+2))); break;

			case 'p': {final Player h=gP(a(s.charAt(f+2))); if(h!=null) g=h.getName(); break;}

			case 'a': {final WgArea h=gA(a(s.charAt(f+2))); if(h!=null) g=h.name; break;}

			case 't': g=gT(a(s.charAt(f+2)))+""; break;
			}
			s=(f>0?s.substring(0,f):"")+g+(f<s.length()-2?s.substring(f+2):"");
		}
		return s;
	}

	private Byte a(char a){
		try{return Byte.parseByte(a+"");}catch(final NumberFormatException e){return 0;}
	}
}
