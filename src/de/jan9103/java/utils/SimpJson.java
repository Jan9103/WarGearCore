/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.java.utils;

import java.util.HashMap;

/**
 * a very stupid, but simple JSON parser.
 * it ignores lists, objects, etc and just maps random key, value pairs
 */
public class SimpJson{
	public final HashMap<String,String>content=new HashMap<>();
	public boolean empty(){return content.isEmpty();}
	public boolean isSet(String key){return content.containsKey(key);}
	public String get(String key,String def){return content.getOrDefault(key,def);}
	public String get(String key){return content.getOrDefault(key,null);}
	public String dump(){
		final StringBuilder o=new StringBuilder();
		content.forEach((a,b)->o.append("\n\""+a+"\"==\""+b+"\""));
		return o.toString();
	}
	public SimpJson(String s){
		final char[]cs=s.toCharArray();
		int i=0;
		while(i<cs.length){
			while(cs[i++]!='"'&&i<cs.length);
			if(i>=cs.length)break;
			StringBuilder key=new StringBuilder(),value=new StringBuilder();
			while(i<cs.length&&cs[i]!='"')key.append(cs[i++]);
			if(++i>=cs.length)break;
			valueParseLoop: while(i<cs.length){
				switch(cs[i++]){
					case' ':case'\t':case':':continue;
					case'"':
						while(i<cs.length&&cs[i]!='"'){
							if(cs[i]=='\\'){
								//TODO \n \t etc
								if(++i>=cs.length)return; // invalid ending
								value.append(cs[i]);
								continue;
							}
							if(cs[i]!='"')
								value.append(cs[i++]);
						}
						i++;
						content.put(key.toString(),value.toString());
						break valueParseLoop;
				}
			}
		}
	}
}
