/*
 * Copyright 2021 Jan9103 (@jan9103:matrix.org Jan9103.wargear@protonmail.com)
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software,
 * and to permit third-parties to whom the Software is furnished to do so, all
 * subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR
 * ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
package de.jan9103.java.utils;

public class StringEscape{
	public static class StringEscapeException extends Exception{public StringEscapeException(String txt){super(txt);}}
	public static String escape(String st){
		StringBuilder b=new StringBuilder();
		for(int i=0;i<st.length();i++){
			char c=st.charAt(i);
			switch(c){
				case'\\':b.append("\\\\");continue;
				case'"':b.append("\\\"");continue;
				case'\'':b.append("\\'");continue;
				case'\b':b.append("\\b");continue;
				case'\n':b.append("\\n");continue;
				case'\r':b.append("\\r");continue;
				case'\f':b.append("\\f");continue;
				case'\t':b.append("\\t");continue;
				//TODO escape octal and hexal
				default:b.append(c);
			}
		}
		return b.toString(); //TODO
	}
	public static String unescape(String st)throws StringEscapeException{
		StringBuilder b=new StringBuilder();
		for(int i=0;i<st.length();i++){
			char c=st.charAt(i);
			if(st.charAt(i)=='\\'){
				if(st.length()<=++i)throw new StringEscapeException("Encoded string ends after escape symbol");
				switch(st.charAt(i)){
					case'\\':b.append('\\');continue;
					case't':b.append('\t');continue;
					case'b':b.append('\b');continue;
					case'n':b.append('\n');continue;
					case'r':b.append('\r');continue;
					case'f':b.append('\f');continue;
					case'"':b.append('"');continue;
					case'\'':b.append('\'');continue;
					case'u':{
						if(i>=st.length()-4){c='u';break;}
						int code=Integer.parseInt(""+st.charAt(++i)+st.charAt(++i)+st.charAt(++i)+st.charAt(++i),16);
						b.append(Character.toChars(code));
						continue;}
					default:throw new StringEscapeException("Unable to unescape string: unknown escape sequence: \"\\"+st.charAt(i)+"\"");
				}
			}else b.append(c);
		}
		return b.toString();
	}
	/**
	 * https://gist.github.com/uklimaschewski/6741769
	 * "No license, it is absolutely free"
	 */
	public static String unescapeFromGit(String st){
		StringBuilder sb=new StringBuilder(st.length());
		for(int i=0;i<st.length();i++){
			char ch=st.charAt(i);
			if (ch=='\\'){
				char nextChar=(i==st.length()-1)?'\\':st.charAt(i+1);
				// Octal escape?
				if(nextChar>='0'&&nextChar<='7'){
					String code = "" + nextChar;
					i++;
					if((i<st.length()-1)&&st.charAt(i+1)>='0'&& st.charAt(i+1)<='7'){
						code += st.charAt(i + 1);
						i++;
						if((i<st.length()-1)&&st.charAt(i+1)>='0'&&st.charAt(i+1)<='7'){
							code += st.charAt(i + 1);
							i++;}}
					sb.append((char) Integer.parseInt(code, 8));
					continue; }
				switch(nextChar){
				case'\\':ch='\\';break;
				case'b':ch='\b';break;
				case'f':ch='\f';break;
				case'n':ch='\n';break;
				case'r':ch='\r';break;
				case't':ch='\t';break;
				case'\"':ch='\"';break;
				case'\'':ch='\'';break;
				// Hex Unicode: u????
				case'u':
					if (i>=st.length()-5){ch='u';break;}
					int code = Integer.parseInt(""+st.charAt(i+2)+st.charAt(i+3)+st.charAt(i+4)+st.charAt(i+5),16);
					sb.append(Character.toChars(code));
					i+=5;
					continue;
				}i++;}
			sb.append(ch);}
		return sb.toString();
	}
}
